// slices/counterSlice.ts
import { createSlice, PayloadAction } from '@reduxjs/toolkit';

// Define the initial state type and value
interface CounterState {
  count: number;
}

const initialState: CounterState = {
  count: 0,
};

// Create a slice that contains the reducer logic and action creators
const counterSlice = createSlice({
  name: 'counter',
  initialState,
  reducers: {
    increment: (state) => {
      state.count += 1; // Mutating the state is fine here due to immer.js integration
    },
    decrement: (state) => {
      state.count -= 1;
    },
    // PayloadAction is used to type the payload for the action
    incrementByAmount: (state, action: PayloadAction<number>) => {
      state.count += action.payload;
    },
  },
});

// Export the actions generated by createSlice
export const { increment, decrement, incrementByAmount } = counterSlice.actions;

// Export the reducer to be included in the store
export default counterSlice.reducer;
